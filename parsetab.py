
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4BBF1EFA1CC41B7FF4E1E340C5EE5FEA'
    
_lr_action_items = {'CARET':([70,],[141,]),'DO':([0,4,5,18,22,28,36,41,86,117,118,144,150,156,180,183,186,225,234,235,298,318,324,331,],[4,4,-5,-7,4,-6,-4,-8,4,-128,4,4,4,-9,4,-24,-18,4,-127,-189,4,4,4,4,]),'LOWER':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[35,35,35,-5,-7,35,35,-6,35,-4,-8,35,-121,35,35,35,-122,35,35,35,-113,35,-117,-112,35,-111,-116,-139,-118,-128,35,35,-109,-110,35,-98,-101,-103,-104,35,-106,-97,-100,-102,-105,-99,-96,35,35,35,35,-9,-140,35,-24,-18,35,35,35,35,35,35,35,35,35,35,35,35,35,-127,-189,35,35,35,35,35,35,35,35,35,35,35,35,]),'RETURN':([0,4,5,18,22,28,36,41,86,117,118,144,150,156,180,183,186,225,234,235,272,296,298,318,324,331,],[2,2,-5,-7,2,-6,-4,-8,2,-128,2,2,2,-9,2,-24,-18,2,-127,-189,297,297,2,2,2,2,]),'LPAREN':([2,7,8,9,17,19,26,27,29,30,31,35,38,40,42,49,56,68,73,75,78,85,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,141,158,160,161,167,168,169,171,172,173,175,179,187,191,192,201,208,210,213,214,216,219,221,222,224,233,239,241,243,248,249,250,256,260,277,282,285,287,288,289,290,292,297,299,],[42,87,-188,-183,-186,-187,42,-181,-17,42,-184,-185,-182,119,42,-121,42,42,-122,119,42,119,42,-113,42,-117,-112,42,-111,-116,-139,-118,42,-109,-110,42,-98,-101,-103,-104,42,-106,-97,-100,-102,-105,-99,-96,42,42,203,-35,213,214,-34,-40,-38,-36,-37,-39,-44,-140,42,119,236,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-37,214,-44,214,119,42,-37,42,42,-41,42,-42,42,320,323,]),'NOTEQUAL':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,125,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'READ':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[19,19,19,-5,-7,19,19,-6,19,-4,-8,19,-121,19,19,19,-122,19,19,19,-113,19,-117,-112,19,-111,-116,-139,-118,-128,19,19,-109,-110,19,-98,-101,-103,-104,19,-106,-97,-100,-102,-105,-99,-96,19,19,19,19,-9,-140,19,-24,-18,19,19,19,19,19,19,19,19,19,19,19,19,19,-127,-189,19,19,19,19,19,19,19,19,19,19,19,19,]),'THEN':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,100,108,109,137,139,140,152,193,195,196,197,198,209,220,237,238,267,279,280,294,304,305,306,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-60,180,-89,-120,-126,201,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,180,201,-87,-62,-82,201,-88,-78,]),'EQUAL':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,131,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'LBRACKET':([11,14,16,21,23,29,32,40,43,44,45,46,47,48,50,57,58,59,60,62,63,64,65,66,69,71,74,75,77,85,100,139,152,166,170,191,193,195,209,220,237,238,260,294,304,308,],[-58,-56,-57,99,-59,-17,-55,-54,-72,-70,-80,-58,-79,-76,-66,-75,-69,-65,99,-68,-59,-77,138,-71,-73,-67,-74,-54,-83,-54,-60,99,-179,216,217,-54,-171,-84,-180,-61,-172,-81,-54,-62,-82,-78,]),'SUCC':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[9,9,9,-5,-7,9,9,-6,9,-4,-8,9,-121,9,9,9,-122,9,9,9,-113,9,-117,-112,9,-111,-116,-139,-118,-128,9,9,-109,-110,9,-98,-101,-103,-104,9,-106,-97,-100,-102,-105,-99,-96,9,9,9,9,-9,-140,9,-24,-18,9,9,9,9,9,9,9,9,9,9,9,9,9,-127,-189,9,9,9,9,9,9,9,9,9,9,9,9,]),'PRINT':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[8,8,8,-5,-7,8,8,-6,8,-4,-8,8,-121,8,8,8,-122,8,8,8,-113,8,-117,-112,8,-111,-116,-139,-118,-128,8,8,-109,-110,8,-98,-101,-103,-104,8,-106,-97,-100,-102,-105,-99,-96,8,8,8,8,-9,-140,8,-24,-18,8,8,8,8,8,8,8,8,8,8,8,8,8,-127,-189,8,8,8,8,8,8,8,8,8,8,8,8,]),'FI':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,86,100,117,137,139,151,152,180,181,193,195,196,197,198,209,220,223,225,226,234,237,238,244,268,276,278,280,294,295,304,306,308,317,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-198,-60,-128,-120,-126,-199,-179,-146,227,-171,-84,-108,-95,-115,-180,-61,-147,-148,269,-127,-172,-81,280,-149,-91,306,-87,-62,-150,-82,-88,-78,-151,]),'WHILE':([4,14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,81,100,137,139,146,147,148,152,193,195,196,197,198,209,220,237,238,248,280,282,283,288,290,294,304,306,308,309,312,313,328,],[78,-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,78,-60,-120,-126,-161,-159,-160,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-168,-87,-169,-162,-41,-42,-62,-82,-88,-78,-163,-164,-167,-165,]),'NULL':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[47,47,47,47,-121,47,47,-122,47,47,-113,47,-117,-112,47,-111,-116,-139,-118,47,-109,-110,47,-98,-101,-103,-104,47,-106,-97,-100,-102,-105,-99,-96,47,47,-140,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'TRUE':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[48,48,48,48,-121,48,48,-122,48,48,-113,48,-117,-112,48,-111,-116,-139,-118,48,-109,-110,48,-98,-101,-103,-104,48,-106,-97,-100,-102,-105,-99,-96,48,48,-140,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'MINUS':([2,11,14,16,21,23,26,29,30,32,40,42,43,44,45,46,47,48,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,69,71,74,75,77,78,85,87,92,93,94,95,99,100,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,152,179,187,191,193,195,196,197,198,201,208,209,210,213,214,216,219,220,221,222,224,233,237,238,239,241,243,260,277,285,287,289,292,294,304,308,],[49,-58,-56,-57,95,-59,49,-17,49,-55,-54,49,-72,-70,-80,-58,-79,-76,-66,-119,95,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,49,-73,-67,-74,-54,-125,49,-54,49,-113,49,-117,-112,49,-60,-111,-116,-139,-118,49,-109,-110,49,-98,-101,-103,-104,49,-106,-97,-100,-102,-105,-99,-96,49,-120,49,-126,-179,-140,49,-54,-171,-84,-108,95,-115,49,49,-180,49,49,49,49,49,-61,49,49,49,49,-172,-81,49,49,49,-54,49,49,49,49,49,-62,-82,-78,]),'DCL':([0,5,18,22,28,36,41,117,156,183,186,234,235,298,318,324,331,],[15,-5,-7,15,-6,-4,-8,-128,-9,-24,-18,-127,-189,15,15,15,15,]),'RPAREN':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,87,88,100,119,120,137,139,152,153,154,158,159,161,162,163,164,165,167,168,169,171,172,173,175,193,194,195,196,197,198,209,211,215,220,236,237,238,245,252,253,255,271,273,274,280,288,290,291,293,294,302,303,304,306,308,314,315,323,325,326,334,340,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,152,-15,-60,193,195,-120,-126,-179,209,-173,-35,-30,-29,-33,-32,-31,-28,-34,-40,-38,-36,-37,-39,-43,-171,237,-84,-108,-95,-115,-180,-16,-46,-61,272,-172,-81,281,-174,288,290,296,-200,-33,-87,-41,-42,-33,-47,-62,-202,-203,-82,-88,-78,-45,-49,-33,-201,-204,341,344,]),'PROC':([118,],[192,]),'SEMI':([1,2,3,6,10,11,12,13,14,16,23,24,29,32,39,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,76,77,80,81,83,84,88,89,90,91,100,107,109,110,111,113,114,116,137,139,142,143,145,146,147,148,152,158,159,161,162,163,164,165,167,168,169,171,172,173,174,175,176,184,189,190,193,195,196,197,198,205,209,211,212,215,218,220,227,228,229,230,231,232,237,238,246,248,263,269,270,272,280,282,283,288,290,291,293,294,296,300,304,306,308,309,312,313,315,319,321,328,329,333,335,337,338,341,342,343,344,],[-130,-176,-129,-135,-134,-131,-137,-136,-56,-57,-132,-133,-17,-55,117,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-177,-125,144,-156,-158,-152,-15,156,-10,-33,-60,-178,-89,-25,183,-19,186,-175,-120,-126,-170,-153,-157,-161,-159,-160,-179,-35,-30,-29,-33,-32,-31,-28,-34,-40,-38,-36,-37,-39,-12,-43,-138,-33,234,235,-171,-84,-108,-95,-115,-154,-180,-16,-11,-46,-13,-61,-144,-26,-27,-20,-21,-23,-172,-81,-155,-168,-14,-145,-22,298,-87,-169,-162,-41,-42,-33,-47,-62,318,324,-82,-88,-78,-163,-164,-167,-49,331,-190,-165,-191,-193,-192,-195,-194,-205,-196,-197,-206,]),'CHAR':([29,88,91,115,162,184,207,211,216,247,274,291,292,320,323,],[-17,-15,168,168,168,168,168,-16,168,168,168,168,168,168,168,]),'REF':([29,88,91,115,162,184,211,274,291,320,323,],[-17,-15,162,162,162,162,-16,162,162,162,162,]),'LESS':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,127,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'SCONST':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[45,45,45,45,-121,45,45,-122,45,45,-113,45,-117,-112,45,-111,-116,-139,-118,45,-109,-110,45,-98,-101,-103,-104,45,-106,-97,-100,-102,-105,-99,-96,45,45,-140,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'BY':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,251,280,294,304,306,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,285,-87,-62,-82,-88,-78,]),'TO':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,251,280,284,286,294,304,306,308,310,311,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,287,-87,287,287,-62,-82,-88,-78,287,-166,]),'NUM':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[27,27,27,-5,-7,27,27,-6,27,-4,-8,27,-121,27,27,27,-122,27,27,27,-113,27,-117,-112,27,-111,-116,-139,-118,-128,27,27,-109,-110,27,-98,-101,-103,-104,27,-106,-97,-100,-102,-105,-99,-96,27,27,27,27,-9,-140,27,-24,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,-127,-189,27,27,27,27,27,27,27,27,27,27,27,27,]),'PLUS':([11,14,16,21,23,29,32,40,43,44,45,46,47,48,50,51,52,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,85,100,137,139,152,191,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-58,-56,-57,101,-59,-17,-55,-54,-72,-70,-80,-58,-79,-76,-66,-119,101,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-54,-60,-120,-126,-179,-54,-171,-84,-108,101,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'COLON':([14,16,29,32,40,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,85,100,137,139,152,178,193,195,196,197,198,200,209,220,237,238,254,260,280,294,304,306,308,],[-56,-57,-17,-55,118,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,150,-60,-120,-126,-179,221,-171,-84,-108,-95,-115,239,-180,-61,-172,-81,289,-54,-87,-62,-82,-88,-78,]),'ARRAY':([29,88,91,115,162,184,211,274,291,320,323,],[-17,-15,166,166,166,166,-16,166,166,166,166,]),'ASSIGN':([11,14,16,21,23,29,32,40,85,88,91,92,94,95,96,97,98,100,101,102,104,105,112,115,149,152,158,159,161,162,163,164,165,167,168,169,171,172,173,174,175,188,191,193,209,211,215,220,237,288,290,291,293,294,315,],[-58,-56,-57,103,-59,-17,-55,-54,-54,-15,-33,-113,-117,-112,-143,-141,-142,-60,-111,-116,179,-118,184,187,208,-179,-35,-30,-29,-33,-32,-31,-28,-34,-40,-38,-36,-37,-39,219,-43,233,-54,-171,-180,-16,-46,-61,-172,-41,-42,-33,-47,-62,-49,]),'CCONST':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[64,64,64,64,-121,64,64,-122,64,64,-113,64,-117,-112,64,-111,-116,-139,-118,64,-109,-110,64,-98,-101,-103,-104,64,-106,-97,-100,-102,-105,-99,-96,64,64,-140,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'$end':([5,18,20,22,25,28,36,41,106,117,156,183,186,234,235,],[-5,-7,0,-2,-1,-6,-4,-8,-3,-128,-9,-24,-18,-127,-189,]),'SCONC':([11,14,16,21,23,29,32,40,43,44,45,46,47,48,50,51,52,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,85,100,137,139,152,191,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-58,-56,-57,92,-59,-17,-55,-54,-72,-70,-80,-58,-79,-76,-66,-119,92,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-54,-60,-120,-126,-179,-54,-171,-84,-108,92,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'END':([5,18,22,28,36,41,106,117,156,183,186,234,235,298,318,322,324,330,331,336,339,],[-5,-7,-2,-6,-4,-8,-3,-128,-9,-24,-18,-127,-189,321,329,333,335,337,338,342,343,]),'DIVIDE':([11,14,16,21,23,29,32,40,43,44,45,46,47,48,50,51,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,85,100,137,139,152,191,193,195,196,198,209,220,237,238,260,294,304,308,],[-58,-56,-57,94,-59,-17,-55,-54,-72,-70,-80,-58,-79,-76,-66,-119,-114,94,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-54,-60,-120,-126,-179,-54,-171,-84,94,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'FOR':([4,],[82,]),'GREATEREQUAL':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,126,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'TIMES':([11,14,16,21,23,29,32,40,43,44,45,46,47,48,50,51,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,85,100,137,139,152,191,193,195,196,198,209,220,237,238,260,294,304,308,],[-58,-56,-57,102,-59,-17,-55,-54,-72,-70,-80,-58,-79,-76,-66,-119,-114,102,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-54,-60,-120,-126,-179,-54,-171,-84,102,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'LOC':([29,88,158,159,161,162,163,164,165,167,168,169,171,172,173,175,211,215,274,288,290,291,293,303,315,320,332,],[-17,-15,-35,-30,-29,-33,-32,-31,-28,-34,-40,-38,-36,-37,-39,-43,-16,-46,-33,-41,-42,-33,-47,326,-49,-33,340,]),'RETURNS':([272,296,],[299,299,]),'ICONST':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,203,208,210,213,214,216,217,219,221,222,224,233,239,241,243,277,285,287,289,292,],[74,74,74,74,-121,74,74,-122,74,74,-113,74,-117,-112,74,-111,-116,-139,-118,74,-109,-110,74,-98,-101,-103,-104,74,-106,-97,-100,-102,-105,-99,-96,74,74,-140,74,74,245,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'RESULT':([0,4,5,18,22,28,36,41,86,117,118,144,150,156,180,183,186,225,234,235,298,318,324,331,],[26,26,-5,-7,26,-6,-4,-8,26,-128,26,26,26,-9,26,-24,-18,26,-127,-189,26,26,26,26,]),'ARROW':([2,11,14,16,21,23,26,29,30,32,40,42,46,49,56,60,63,68,73,75,78,85,87,92,93,94,95,99,100,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,152,179,187,191,193,201,208,209,210,213,214,216,219,220,221,222,224,233,237,239,241,243,260,277,285,287,289,292,294,],[67,-58,-56,-57,100,-59,67,-17,67,-55,-54,67,-58,-121,67,100,-59,67,-122,-54,67,-54,67,-113,67,-117,-112,67,-60,-111,-116,-139,-118,67,-109,-110,67,-98,-101,-103,-104,67,-106,-97,-100,-102,-105,-99,-96,67,67,100,-179,-140,67,-54,-171,67,67,-180,67,67,67,67,67,-61,67,67,67,67,-172,67,67,67,-54,67,67,67,67,67,-62,]),'IN':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,149,152,193,195,196,197,198,206,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,129,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,207,-179,-171,-84,-108,-95,-115,247,-180,-61,-172,-81,-54,-62,-82,-78,]),'LESSEQUAL':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,133,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'BOOL':([29,88,91,115,162,184,207,211,216,247,274,291,292,320,323,],[-17,-15,173,173,173,173,173,-16,173,173,173,173,173,173,173,]),'DOWN':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,100,137,139,149,152,193,195,196,197,198,209,220,237,238,251,280,284,294,304,306,308,311,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-60,-120,-126,206,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,286,-87,310,-62,-82,-88,-78,-166,]),'ELSE':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,86,100,117,137,139,151,152,180,181,193,195,196,197,198,202,209,220,223,234,237,238,240,242,280,294,295,304,306,307,308,327,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-198,-60,-128,-120,-126,-199,-179,-146,225,-171,-84,-108,-95,-115,241,-180,-61,-147,-127,-172,-81,-90,241,-87,-62,225,-82,-88,-92,-78,-93,]),'ID':([0,2,4,5,15,18,22,26,28,29,30,33,34,36,37,41,42,49,56,67,68,73,78,82,86,87,88,91,92,93,94,95,99,101,102,103,105,115,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,155,156,157,162,179,180,182,183,184,185,186,187,201,207,208,210,211,213,214,216,219,221,222,224,225,233,234,235,236,239,241,243,247,274,277,285,287,289,291,292,298,301,318,320,323,324,331,],[29,29,29,-5,29,-7,29,29,-6,-17,29,29,29,-4,29,-8,29,-121,29,29,29,-122,29,29,29,29,-15,29,-113,29,-117,-112,29,-111,-116,-139,-118,29,-128,29,29,-109,-110,29,-98,-101,-103,-104,29,-106,-97,-100,-102,-105,-99,-96,29,29,29,29,29,-9,29,29,-140,29,29,-24,29,29,-18,29,29,29,29,29,-16,29,29,29,29,29,29,29,29,29,-127,-189,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'IF':([0,2,4,5,18,22,26,28,30,36,41,42,68,78,86,87,93,99,103,117,118,119,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[30,68,30,-5,-7,30,68,-6,68,-4,-8,68,68,68,30,68,68,68,-139,-128,30,68,68,30,30,-9,-140,30,-24,-18,68,68,68,68,68,68,68,68,68,68,68,30,68,-127,-189,68,68,68,68,68,68,68,68,30,30,30,30,]),'AND':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,124,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'UPPER':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[31,31,31,-5,-7,31,31,-6,31,-4,-8,31,-121,31,31,31,-122,31,31,31,-113,31,-117,-112,31,-111,-116,-139,-118,-128,31,31,-109,-110,31,-98,-101,-103,-104,31,-106,-97,-100,-102,-105,-99,-96,31,31,31,31,-9,-140,31,-24,-18,31,31,31,31,31,31,31,31,31,31,31,31,31,-127,-189,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[57,57,57,57,-121,57,57,-122,57,57,-113,57,-117,-112,57,-111,-116,-139,-118,57,-109,-110,57,-98,-101,-103,-104,57,-106,-97,-100,-102,-105,-99,-96,57,57,-140,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'GREATER':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,132,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'SQUOTE':([2,26,30,42,49,56,68,73,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,281,285,287,289,292,],[70,70,70,70,-121,70,70,-122,70,70,-113,70,-117,-112,70,-111,-116,-139,-118,70,-109,-110,70,-98,-101,-103,-104,70,-106,-97,-100,-102,-105,-99,-96,70,70,-140,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,308,70,70,70,70,]),'INT':([29,88,91,115,162,184,207,211,216,247,274,291,292,320,323,],[-17,-15,169,169,169,169,169,-16,169,169,169,169,169,169,169,]),'PRED':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[38,38,38,-5,-7,38,38,-6,38,-4,-8,38,-121,38,38,38,-122,38,38,38,-113,38,-117,-112,38,-111,-116,-139,-118,-128,38,38,-109,-110,38,-98,-101,-103,-104,38,-106,-97,-100,-102,-105,-99,-96,38,38,38,38,-9,-140,38,-24,-18,38,38,38,38,38,38,38,38,38,38,38,38,38,-127,-189,38,38,38,38,38,38,38,38,38,38,38,38,]),'CHARS':([29,88,91,115,162,184,211,274,291,320,323,],[-17,-15,170,170,170,170,-16,170,170,170,170,]),'OD':([4,79,86,117,144,151,204,234,],[84,143,-198,-128,205,-199,246,-127,]),'ELSIF':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,86,100,117,137,139,151,152,180,181,193,195,196,197,198,202,209,220,223,234,237,238,240,242,280,294,295,304,306,307,308,327,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-198,-60,-128,-120,-126,-199,-179,-146,224,-171,-84,-108,-95,-115,243,-180,-61,-147,-127,-172,-81,-90,277,-87,-62,224,-82,-88,-92,-78,-93,]),'SYN':([0,5,18,22,28,36,41,117,156,183,186,234,235,298,318,324,331,],[34,-5,-7,34,-6,-4,-8,-128,-9,-24,-18,-127,-189,34,34,34,34,]),'LENGTH':([0,2,4,5,18,22,26,28,30,36,41,42,49,56,67,68,73,78,86,87,92,93,94,95,99,101,102,103,105,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,144,150,156,179,180,183,186,187,201,208,210,213,214,216,219,221,222,224,225,233,234,235,239,241,243,277,285,287,289,292,298,318,324,331,],[17,17,17,-5,-7,17,17,-6,17,-4,-8,17,-121,17,17,17,-122,17,17,17,-113,17,-117,-112,17,-111,-116,-139,-118,-128,17,17,-109,-110,17,-98,-101,-103,-104,17,-106,-97,-100,-102,-105,-99,-96,17,17,17,17,-9,-140,17,-24,-18,17,17,17,17,17,17,17,17,17,17,17,17,17,-127,-189,17,17,17,17,17,17,17,17,17,17,17,17,]),'EXIT':([0,4,5,18,22,28,36,41,86,117,118,144,150,156,180,183,186,225,234,235,298,318,324,331,],[37,37,-5,-7,37,-6,-4,-8,37,-128,37,37,37,-9,37,-24,-18,37,-127,-189,37,37,37,37,]),'MODUS':([11,14,16,21,23,29,32,40,43,44,45,46,47,48,50,51,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,85,100,137,139,152,191,193,195,196,198,209,220,237,238,260,294,304,308,],[-58,-56,-57,105,-59,-17,-55,-54,-72,-70,-80,-58,-79,-76,-66,-119,-114,105,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-54,-60,-120,-126,-179,-54,-171,-84,105,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),'NOT':([2,26,30,42,68,78,87,92,93,94,95,99,101,102,103,105,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,179,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[73,73,73,73,73,73,73,-113,73,-117,-112,73,-111,-116,-139,-118,73,-109,-110,73,-98,-101,-103,-104,73,-106,-97,-100,-102,-105,-99,-96,73,73,-140,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'RBRACKET':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,100,137,139,152,158,167,168,169,171,172,173,177,178,193,195,196,197,198,199,200,209,220,237,238,256,257,258,259,261,262,264,265,266,275,280,288,290,294,304,306,308,314,316,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,-60,-120,-126,-179,-35,-34,-40,-38,-36,-37,-39,220,-63,-171,-84,-108,-95,-115,238,-63,-180,-61,-172,-81,-52,291,-50,-53,-48,293,294,-64,-63,304,-87,-41,-42,-62,-82,-88,-78,-45,-51,]),'COMMA':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,72,74,75,77,88,90,91,100,110,113,137,139,152,154,158,159,161,162,163,164,165,167,168,169,171,172,173,174,175,178,184,193,195,196,197,198,200,209,211,215,218,220,229,231,232,237,238,256,258,259,263,266,270,273,274,280,288,290,291,293,294,302,303,304,306,308,314,315,326,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,-85,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-86,-74,-54,-125,155,157,-33,-60,182,185,-120,-126,-179,210,-35,-30,-29,-33,-32,-31,-28,-34,-40,-38,-36,-37,-39,-12,-43,222,-33,-171,-84,-108,-95,-115,222,-180,-16,-46,-13,-61,-27,-21,-23,-172,-81,-52,292,-53,-14,222,-22,301,-33,-87,-41,-42,-33,-47,-62,-202,-203,-82,-88,-78,-45,-49,-204,]),'TYPE':([0,5,18,22,28,36,41,117,156,183,186,234,235,298,318,324,331,],[33,-5,-7,33,-6,-4,-8,-128,-9,-24,-18,-127,-189,33,33,33,33,]),'OR':([14,16,29,32,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,69,71,74,75,77,100,137,139,152,193,195,196,197,198,209,220,237,238,260,294,304,308,],[-56,-57,-17,-55,-72,-70,-80,-58,-79,-76,-66,-119,-94,134,-114,-107,-75,-69,-65,-123,-124,-68,-59,-77,-71,-73,-67,-74,-54,-125,-60,-120,-126,-179,-171,-84,-108,-95,-115,-180,-61,-172,-81,-54,-62,-82,-78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[1,1,1,1,1,1,1,1,1,1,1,1,1,]),'relational_operator':([53,],[135,]),'boolean_literal':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'reference_mode':([91,115,162,184,274,291,320,323,],[159,159,159,159,159,159,159,159,]),'mode_name':([91,115,162,184,274,291,320,323,],[165,165,165,165,165,165,165,165,]),'control_part':([4,],[80,]),'newmode_statement':([0,22,298,318,324,331,],[28,28,28,28,28,28,]),'procedure_statement':([0,22,298,318,324,331,],[18,18,18,18,18,18,]),'integer_mode':([91,115,162,184,207,216,247,274,291,292,320,323,],[167,167,167,167,167,167,167,167,167,167,167,167,]),'program':([0,],[20,]),'location':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[21,60,21,21,60,60,60,60,139,60,60,21,60,60,60,21,60,60,60,60,60,21,21,21,60,60,60,60,60,60,60,60,60,60,60,21,60,60,60,60,60,60,60,60,60,21,21,21,21,]),'string_length':([217,],[262,]),'formal_parameter_list':([236,301,],[271,325,]),'result_spec':([272,296,],[300,319,]),'index_list':([216,292,],[257,316,]),'character_literal':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'boolean_mode':([91,115,162,184,207,216,247,274,291,292,320,323,],[158,158,158,158,158,158,158,158,158,158,158,158,]),'step_enumeration':([82,],[148,]),'while_control':([4,81,],[83,145,]),'closed_dyadic_operator':([21,],[104,]),'character_string_literal':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'dereferenced_reference':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parameter_list':([87,119,210,],[153,194,252,]),'boolean_expression':([30,68,78,224,243,277,],[108,140,142,267,279,305,]),'declaration_list':([15,157,],[89,212,]),'mode':([91,115,162,184,274,291,320,323,],[174,188,215,229,303,315,332,334,]),'identifier':([0,2,4,15,22,26,30,33,34,37,42,56,67,68,78,82,86,87,91,93,99,115,118,119,123,128,136,138,144,150,155,157,162,180,182,184,185,187,201,207,208,210,213,214,216,219,221,222,224,225,233,236,239,241,243,247,274,277,285,287,289,291,292,298,301,318,320,323,324,331,],[40,75,85,88,40,75,75,88,88,116,75,75,75,75,75,149,85,75,175,75,75,175,191,75,75,75,75,75,85,191,88,88,175,85,88,175,88,75,75,250,75,75,75,75,260,75,75,75,75,85,75,88,75,75,75,250,175,75,75,75,75,175,260,40,88,40,175,175,40,40,]),'bracketed_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'synonym_statement':([0,22,298,318,324,331,],[5,5,5,5,5,5,]),'arithmetic_multiplicative_operator':([21,55,196,],[98,136,136,]),'result_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'step_value':([251,],[284,]),'procedure_call':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[11,46,11,11,46,46,46,46,46,46,46,11,46,46,46,11,46,46,46,46,46,11,11,11,46,46,46,46,46,46,46,46,46,46,46,11,46,46,46,46,46,46,46,46,46,11,11,11,11,]),'if_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'slice':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'parameter_spec':([274,],[302,]),'mode_definition':([33,182,],[110,110,]),'array_primitive_value':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'then_clause':([108,267,],[181,295,]),'synonym_list':([34,185,],[114,230,]),'assigning_operator':([21,],[93,]),'discrete_range_mode':([91,115,162,184,207,216,247,274,291,292,320,323,],[172,172,172,172,248,172,282,172,172,172,172,172,]),'declaration_statement':([0,22,298,318,324,331,],[36,36,36,36,36,36,]),'statement_list':([0,22,298,318,324,331,],[25,106,322,330,336,339,]),'expression':([2,26,30,42,68,78,87,93,99,119,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[76,107,109,120,109,109,154,176,178,154,200,232,240,251,154,254,254,254,263,264,266,109,232,275,276,109,109,311,313,314,254,]),'arithmetic_additive_operator':([21,52,197,],[97,121,121,]),'operator1':([53,],[128,]),'operator2':([52,197,],[123,123,]),'empty_literal':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'discrete_mode':([91,115,162,184,207,216,247,274,291,292,320,323,],[161,161,161,161,249,256,249,161,161,256,161,161,]),'action_statement_list':([4,86,144,180,225,],[79,151,204,223,268,]),'then_expression':([140,279,305,],[202,307,327,]),'membership_operator':([53,],[130,]),'literal':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'statement':([0,22,298,318,324,331,],[22,22,22,22,22,22,]),'else_expression':([202,242,],[244,278,]),'referenced_location':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'parenthesized_expression':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'constant_expression':([187,233,],[231,270,]),'else_clause':([181,295,],[226,317,]),'declaration':([15,157,],[90,90,]),'for_control':([4,],[81,]),'synonym_definition':([34,185,],[113,113,]),'iteration':([82,],[147,]),'builtin_name':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'elsif_expression':([202,],[242,]),'string_concatenation_operator':([21,52,197,],[96,122,122,]),'newmode_list':([33,182,],[111,228,]),'literal_range':([213,214,216,292,],[253,255,259,259,]),'action_statement':([0,4,22,86,144,180,225,298,318,324,331,],[41,86,41,86,86,86,86,41,41,41,41,]),'primitive_value':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'monadic_operator':([2,26,30,42,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'end_value':([251,284,286,310,],[283,309,312,328,]),'discrete_mode_name':([91,115,162,184,207,216,247,274,291,292,320,323,],[160,160,160,160,160,160,160,160,160,160,160,160,]),'do_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'value_array_element':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'string_element':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'operand4':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[51,51,51,51,137,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'operand1':([2,26,30,42,68,78,87,93,99,119,128,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[52,52,52,52,52,52,52,52,52,52,197,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'operand0':([2,26,30,42,68,78,87,93,99,119,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'operand3':([2,26,30,42,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[54,54,54,54,54,54,54,54,54,54,54,54,198,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'operand2':([2,26,30,42,68,78,87,93,99,119,123,128,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[55,55,55,55,55,55,55,55,55,55,196,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'string_mode':([91,115,162,184,274,291,320,323,],[164,164,164,164,164,164,164,164,]),'range_enumeration':([82,],[146,]),'exit_action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'builtin_call':([0,2,4,22,26,30,42,56,67,68,78,86,87,93,99,118,119,123,128,136,138,144,150,180,187,201,208,210,213,214,216,219,221,222,224,225,233,239,241,243,277,285,287,289,292,298,318,324,331,],[23,63,23,23,63,63,63,63,63,63,63,23,63,63,63,23,63,63,63,63,63,23,23,23,63,63,63,63,63,63,63,63,63,63,63,23,63,63,63,63,63,63,63,63,63,23,23,23,23,]),'initialization':([174,],[218,]),'action':([0,4,22,86,118,144,150,180,225,298,318,324,331,],[39,39,39,39,189,39,189,39,39,39,39,39,39,]),'index_mode':([216,292,],[258,258,]),'identifier_list':([15,33,34,155,157,182,185,236,301,],[91,112,115,211,91,112,115,274,274,]),'integer_literal':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,217,219,221,222,224,233,239,241,243,277,285,287,289,292,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,261,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'array_mode':([91,115,162,184,274,291,320,323,],[163,163,163,163,163,163,163,163,]),'formal_parameter':([236,301,],[273,273,]),'expression_list':([99,138,222,],[177,199,265,]),'character_mode':([91,115,162,184,207,216,247,274,291,292,320,323,],[171,171,171,171,171,171,171,171,171,171,171,171,]),'value_array_slice':([2,26,30,42,56,68,78,87,93,99,119,123,128,136,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'conditional_expression':([2,26,30,42,68,78,87,93,99,119,138,187,201,208,210,213,214,216,219,221,222,224,233,239,241,243,277,285,287,289,292,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'procedure_definition':([118,],[190,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lya_parser.py',27),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lya_parser.py',31),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','lya_parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','lya_parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','lya_parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','lya_parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','lya_parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','lya_parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lya_parser.py',47),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lya_parser.py',51),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','lya_parser.py',52),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lya_parser.py',59),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lya_parser.py',60),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lya_parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lya_parser.py',71),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','lya_parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','lya_parser.py',79),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lya_parser.py',83),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lya_parser.py',87),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','lya_parser.py',88),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lya_parser.py',95),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lya_parser.py',96),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lya_parser.py',103),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lya_parser.py',107),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lya_parser.py',111),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','lya_parser.py',112),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lya_parser.py',119),
  ('mode -> mode_name','mode',1,'p_mode','lya_parser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lya_parser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lya_parser.py',130),
  ('mode -> string_mode','mode',1,'p_mode','lya_parser.py',131),
  ('mode -> array_mode','mode',1,'p_mode','lya_parser.py',132),
  ('mode -> <empty>','mode',0,'p_mode','lya_parser.py',133),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lya_parser.py',137),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lya_parser.py',138),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lya_parser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lya_parser.py',140),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lya_parser.py',144),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lya_parser.py',148),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lya_parser.py',152),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lya_parser.py',156),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lya_parser.py',157),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lya_parser.py',161),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lya_parser.py',165),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','lya_parser.py',169),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lya_parser.py',173),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lya_parser.py',177),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lya_parser.py',181),
  ('array_mode -> ARRAY LBRACKET index_list RBRACKET mode','array_mode',5,'p_array_mode','lya_parser.py',185),
  ('index_list -> index_mode','index_list',1,'p_index_list','lya_parser.py',189),
  ('index_list -> index_mode COMMA index_list','index_list',3,'p_index_list','lya_parser.py',190),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lya_parser.py',197),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lya_parser.py',198),
  ('location -> identifier','location',1,'p_location','lya_parser.py',202),
  ('location -> dereferenced_reference','location',1,'p_location','lya_parser.py',203),
  ('location -> string_element','location',1,'p_location','lya_parser.py',204),
  ('location -> slice','location',1,'p_location','lya_parser.py',205),
  ('location -> procedure_call','location',1,'p_location','lya_parser.py',206),
  ('location -> builtin_call','location',1,'p_location','lya_parser.py',207),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lya_parser.py',211),
  ('string_element -> location LBRACKET expression_list RBRACKET','string_element',4,'p_string_element','lya_parser.py',215),
  ('slice -> location LBRACKET expression COLON expression RBRACKET','slice',6,'p_slice','lya_parser.py',219),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lya_parser.py',223),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','lya_parser.py',224),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lya_parser.py',231),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lya_parser.py',232),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lya_parser.py',233),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lya_parser.py',234),
  ('literal -> integer_literal','literal',1,'p_literal','lya_parser.py',238),
  ('literal -> boolean_literal','literal',1,'p_literal','lya_parser.py',239),
  ('literal -> character_literal','literal',1,'p_literal','lya_parser.py',240),
  ('literal -> empty_literal','literal',1,'p_literal','lya_parser.py',241),
  ('literal -> character_string_literal','literal',1,'p_literal','lya_parser.py',242),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lya_parser.py',246),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lya_parser.py',250),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lya_parser.py',251),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lya_parser.py',255),
  ('character_literal -> SQUOTE CARET LPAREN ICONST RPAREN SQUOTE','character_literal',6,'p_character_literal','lya_parser.py',256),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lya_parser.py',263),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','lya_parser.py',267),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lya_parser.py',271),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lya_parser.py',275),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lya_parser.py',279),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lya_parser.py',283),
  ('expression -> operand0','expression',1,'p_expression','lya_parser.py',287),
  ('expression -> conditional_expression','expression',1,'p_expression','lya_parser.py',288),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lya_parser.py',295),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lya_parser.py',296),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lya_parser.py',303),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lya_parser.py',307),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lya_parser.py',311),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lya_parser.py',315),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lya_parser.py',316),
  ('operand0 -> operand1','operand0',1,'p_operand0','lya_parser.py',323),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lya_parser.py',324),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lya_parser.py',331),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lya_parser.py',332),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lya_parser.py',336),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lya_parser.py',337),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','lya_parser.py',338),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lya_parser.py',339),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','lya_parser.py',340),
  ('relational_operator -> GREATEREQUAL','relational_operator',1,'p_relational_operator','lya_parser.py',341),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','lya_parser.py',342),
  ('relational_operator -> LESSEQUAL','relational_operator',1,'p_relational_operator','lya_parser.py',343),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lya_parser.py',347),
  ('operand1 -> operand2','operand1',1,'p_operand1','lya_parser.py',351),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lya_parser.py',352),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lya_parser.py',359),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lya_parser.py',360),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lya_parser.py',364),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lya_parser.py',365),
  ('string_concatenation_operator -> SCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lya_parser.py',369),
  ('operand2 -> operand3','operand2',1,'p_operand2','lya_parser.py',373),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lya_parser.py',374),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lya_parser.py',381),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lya_parser.py',382),
  ('arithmetic_multiplicative_operator -> MODUS','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lya_parser.py',383),
  ('operand3 -> operand4','operand3',1,'p_operand3','lya_parser.py',387),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lya_parser.py',388),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lya_parser.py',395),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lya_parser.py',396),
  ('operand4 -> location','operand4',1,'p_operand4','lya_parser.py',400),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lya_parser.py',401),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lya_parser.py',402),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lya_parser.py',406),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','lya_parser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lya_parser.py',411),
  ('action -> bracketed_action','action',1,'p_action','lya_parser.py',418),
  ('action -> assignment_action','action',1,'p_action','lya_parser.py',419),
  ('action -> procedure_call','action',1,'p_action','lya_parser.py',420),
  ('action -> builtin_call','action',1,'p_action','lya_parser.py',421),
  ('action -> exit_action','action',1,'p_action','lya_parser.py',422),
  ('action -> return_action','action',1,'p_action','lya_parser.py',423),
  ('action -> result_action','action',1,'p_action','lya_parser.py',424),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lya_parser.py',428),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lya_parser.py',429),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lya_parser.py',433),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lya_parser.py',437),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','lya_parser.py',438),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lya_parser.py',445),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lya_parser.py',446),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lya_parser.py',447),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lya_parser.py',451),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lya_parser.py',452),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lya_parser.py',459),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lya_parser.py',460),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lya_parser.py',467),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lya_parser.py',468),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','lya_parser.py',469),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','lya_parser.py',470),
  ('do_action -> DO OD','do_action',2,'p_do_action','lya_parser.py',481),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lya_parser.py',482),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lya_parser.py',483),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lya_parser.py',484),
  ('control_part -> for_control','control_part',1,'p_control_part','lya_parser.py',495),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lya_parser.py',496),
  ('control_part -> while_control','control_part',1,'p_control_part','lya_parser.py',497),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lya_parser.py',504),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lya_parser.py',508),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lya_parser.py',509),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','lya_parser.py',513),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','lya_parser.py',514),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','lya_parser.py',515),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lya_parser.py',516),
  ('step_value -> BY expression','step_value',2,'p_step_value','lya_parser.py',528),
  ('end_value -> TO expression','end_value',2,'p_end_value','lya_parser.py',532),
  ('range_enumeration -> identifier IN discrete_range_mode','range_enumeration',3,'p_range_enumeration','lya_parser.py',536),
  ('range_enumeration -> identifier DOWN IN discrete_range_mode','range_enumeration',4,'p_range_enumeration','lya_parser.py',537),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lya_parser.py',544),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','lya_parser.py',548),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lya_parser.py',549),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lya_parser.py',556),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','lya_parser.py',557),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lya_parser.py',564),
  ('return_action -> RETURN','return_action',1,'p_return_action','lya_parser.py',568),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lya_parser.py',569),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lya_parser.py',576),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lya_parser.py',580),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lya_parser.py',581),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lya_parser.py',588),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lya_parser.py',589),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lya_parser.py',590),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lya_parser.py',591),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lya_parser.py',592),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lya_parser.py',593),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lya_parser.py',594),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lya_parser.py',595),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lya_parser.py',599),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI END','procedure_definition',5,'p_procedure_definition','lya_parser.py',603),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI END','procedure_definition',6,'p_procedure_definition','lya_parser.py',604),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI END','procedure_definition',6,'p_procedure_definition','lya_parser.py',605),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lya_parser.py',606),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI END','procedure_definition',7,'p_procedure_definition','lya_parser.py',607),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lya_parser.py',608),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lya_parser.py',609),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lya_parser.py',610),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lya_parser.py',629),
  ('action_statement_list -> action_statement action_statement_list','action_statement_list',2,'p_action_statement_list','lya_parser.py',630),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lya_parser.py',637),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lya_parser.py',638),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lya_parser.py',645),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lya_parser.py',649),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lya_parser.py',650),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lya_parser.py',657),
  ('result_spec -> RETURN LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','lya_parser.py',658),
]
